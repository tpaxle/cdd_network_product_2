name: Release documentation

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
    - 'main'


env:
  ACTION_GITHUB_TAG_ACTION: v5.5
  PACKER_VERSION: "1.7.2"
  APPLICATION_ID: "120620"
  PLAYBOOK_VERSION: "V0.5.4"
  PROJECT: ccd_network_product_1

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildrelease:
    environment: services
    # The type of runner that the job will run on
    runs-on: lab

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Create decrypt ansible vault
      run:  |
        echo ${{ secrets.VAULT_PASSWORD }} >> .vault

    - name: ansible-playbook build
      run:  |
        ansible-playbook -i inventory/ --vault-password-file .vault playbooks/fabric-deploy-All.yml -t build
        ansible-playbook playbooks/compare-configs.yml -i inventory/ --vault-password-file .vault
        python3 scripts/list.py
        ansible-playbook playbooks/generate_doc.yml -i inventory/ --vault-password-file .vault

    - name: Copy current confg
      run:  |
        cp -rp inventory/intended/configs/* doc/devices/configs/

    - name: Add & Commit
      uses: EndBug/add-and-commit@v9.0.0
      with:
        message: "[Actions] Doc autogenerate"

  releasing:
    needs: buildrelease
    # The type of runner that the job will run on
    runs-on: lab

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v5.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        release_branches: main
        pre_release_branches: development, feature.*
        append_to_pre_release_tag: snap
        dry_run: true


    - name: "Get build info"
      id: build_info
      shell: bash
      run: |
        release_body=`changelog ${GITHUB_REPOSITORY} -t ${{ github.token }} -sr v${{steps.tag_version.outputs.previous_tag}} -b main`
        release_body="${release_body//'%'/%25}"
        release_body="${release_body//$'\n'/%0A}"
        release_body="${release_body//$'\r'/%0D}"
        echo "##[set-output name=release_body;]$(echo ${release_body})"

    - name: "Create release"
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TEST }}
      with:
        tag_name: ${{steps.tag_version.outputs.new_tag}}
        release_name: Release ${{steps.tag_version.outputs.new_tag}}
        body: |
          ${{steps.build_info.outputs.release_body}}
        draft: false
        prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{steps.tag_version.outputs.new_tag}}
 # This workflow contains a single job called "build"
  upload-assests:
    # The type of runner that the job will run on
    runs-on: lab
    needs: releasing
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Create zip file
      run: zip -r ${{ env.PROJECT }}_configs.zip doc/devices/configs

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ GITHUB.token }}
      with:
        upload_url: ${{ needs.releasing.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ${{ env.PROJECT }}_configs.zip
        asset_name: ${{ env.PROJECT }}_configs.zip
        asset_content_type: application/zip
